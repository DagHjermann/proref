---
title: "53_Proref_revision_2024"
format: html
---

## 

```{r}
library(data.table)
library(dplyr)
library(purrr)
library(ggplot2)
library(forcats)

# install.packages("xlsx")
# library(xlsx)

source("50fun_Calculate_PROREF_functions.R")
```


## Data
```{r}

# files have been copied from C:\Users\DHJ\OneDrive - NIVA\Documents\seksjon 212\Milkys 2017\Analyse\Data

# load(file = "Milkys_2017/Data/12d_data_all.RData")
load(file = "Input_data/2017/12d_data_all.RData")
# data_all from 12b4, this is the one to use for raw data

# load(file = "Milkys_2017/Data/12b3_data_all_2015sp.RData")        
load(file = "Input_data/2017/12b3_data_all_2015sp.RData")        
# data_all_2015sp - the better length-adjusted data
```



### Some corrections
```{r}

# Delete lines with no values
sel <- is.na(data_all$VALUE_WW); sum(sel)
data_all <- data_all[!sel,]

# Some adjusted HBCDD values with no unit, set them to UG (why did this happen?)
sel <- with(data_all, PARAM %in% "HBCDD")
# table(addNA(data_all$UNIT[sel]))
# data_all$UNIT[sel] <- "UG_P_KG"

# TISSUE_NAME for blue mussel
sel <- with(data_all, LATIN_NAME == "Mytilus edulis" & TISSUE_NAME != "Whole soft body")
data_all$TISSUE_NAME[sel] <- "Whole soft body"

sel <- with(data_all, YEAR < 1981); sum(sel)
data_all <- data_all[!sel,]

nrow(data_all) # 319179

# sl? sammen  227G1 +  227G2 - already done
# xtabs(~STATION_CODE + YEAR + LATIN_NAME, subset(data_all, substr(STATION_CODE,1,4) %in% "227G"))
```


### Define years  
```{r}
years_backgr <- 2002:2016
```


## Process, step by step
### Step 1: get_lower_medians  

- get data series (for several stations). Result: object with medians (per year) and medians (per station)  

```{r}
# debugonce(get_lower_medians)
X <- get_lower_medians("DDEPP", sp = "Gadus morhua", ti = "Lever", variable = "VALUE_WW", data = subset(data_all, YEAR %in% years_backgr))
# X <- get_lower_medians("PFOSA", sp = "Gadus morhua", ti = "Lever", variable = "VALUE_WW", data = subset(data_all, YEAR %in% years_backgr))
str(X, 1)
str(X$data_medians_list[["10B"]], 1)
X$median_per_station
```
#### medians

```{r}
sort(X$median_per_station)
```
### find_set_difference
```{r}

# debugonce(find_set_difference)
find_set_difference(X, 5)

```


### find_set_differences
```{r}
# debugonce(find_set_differences)
diff <- find_set_differences(X)
diff
```

### differences_increasing_conc  

- 'differences_increasing_conc' is just 'get_lower_medians' followed by 'find_set_differences'  
- 'differences_increasing_conc' is used in 'plot_increase'  

```{r}

differences_increasing_conc(
  "DDEPP", sp = "Gadus morhua", ti = "Lever", variable = "VALUE_WW", data = subset(data_all, YEAR %in% years_backgr))
# differences_increasing_conc(
#   "PFOSA", sp = "Gadus morhua", ti = "Lever", variable = "VALUE_WW", data = subset(data_all, YEAR %in% years_backgr))

```

### Plot first station   

- with percent over LOQ shown  

```{r}
i <- 1
diff$Station[i]
ggplot(X$data_medians_list[[diff$Station[i]]] %>% mutate(perc_over_loq = round(100*n_loq/n,0)), 
       aes(x = STATION_CODE, y = median)) + 
  geom_point() +
  geom_text(aes(label = perc_over_loq), hjust = 0, nudge_x = 0.05)

# ggplot(X$data_medians_list[diff$Station[i:(i+1)]], aes(x = STATION_CODE, y = median)) + geom_point()
```
### Plot all stations  

- with percent over LOQ shown  

```{r}

ggplot(diff %>% mutate(Station = fct_inorder(factor(Station))), 
       aes(Station, Median2)) +
  geom_point() +
  geom_text(aes(label = Perc_over_loq2), hjust = 0, nudge_x = 0.1)

```
### Plot all stations  

- with median ratio shown  

```{r}

ggplot(diff %>% mutate(Station = fct_inorder(factor(Station))), 
       aes(Station, Median2)) +
  geom_point() +
  geom_text(aes(label = round(Median_ratio, 1)), hjust = 0, nudge_x = 0.1)

```

### plot_increase  

* 'plot_increase' is 'differences_increasing_conc' followed by plotting  
* returns the rsult of 'differences_increasing_conc'  

```{r}

# DDEPP", sp = "Gadus morhua", ti = "Lever", variable = "VALUE_WW"

diff <- plot_increase(par = "DDEPP", sp = "Gadus morhua", ti = "Lever", variable_name = "VALUE_WW",
              data = subset(data_all, YEAR %in% years_backgr))  

diff <- plot_increase(par = "CB28", sp = "Mytilus edulis", ti = "Whole soft body", variable_name = "VALUE_WW",
                      min_indiv_per_year = 2, 
                      data = subset(data_all, YEAR %in% years_backgr))  


# debugonce(plot_increase)
# debugonce(differences_increasing_conc)
# debugonce(get_lower_medians)

```

### get_background_values 

- 'get_background_values' (like 'differences_increasing_conc') is 'get_lower_medians' followed by 'find_set_differences'  
- but before that it also sets 'min_indiv_per_year' and tissue  
- and in the 

```{r}

# debugonce(get_background_values)
get_background_values(determinant = "DDEPP", species = "Gadus morhua", var_name = "VALUE_WW", 
                              years_backgr = 1992:2016,
                              data = subset(data_all, YEAR %in% years_backgr))  

```

### get all selected background values   

```{r}

# "Safe" version of function (doesn't break the loop if there are errors)
get_background_values_s <- safely(get_background_values)

df_series_sel <- readxl::read_excel("Info/Proref table - MS version 17.xlsx")

result_list <- map2(df_series_sel$PARAM, 
     df_series_sel$Species,
     \(x,y) get_background_values_s(determinant = x, species = y, var_name = "VALUE_WW", 
                              years_backgr = 1992:2016,
                              data = subset(data_all, YEAR %in% years_backgr))
     )

ok <- map(result_list, "error") %>% map_lgl(is.null)
result <- map_dfr(result_list[ok], "result")

```

## 2022 data 

```{r}

years_backgr2 <- 2002:2022
data_all2 <- readRDS("Input_data/2022/105_data_with_uncertainty_2023-09-12.rds") %>%
  rename(YEAR = MYEAR)

# All parameters
# table(data_all2$PARAM)

# test
# get_background_values(determinant = "DDEPP", species = "Gadus morhua", var_name = "VALUE_WW",
#                               years_backgr = 1992:2022,
#                               data = subset(data_all2, YEAR %in% years_backgr2))

result_list <- map2(df_series_sel$PARAM, 
     df_series_sel$Species,
     \(x,y) get_background_values_s(determinant = x, species = y, var_name = "VALUE_WW", 
                              years_backgr = 1992:2022,
                              data = subset(data_all2, YEAR %in% years_backgr2))
     )

ok <- map(result_list, "error") %>% map_lgl(is.null)
result2 <- map_dfr(result_list[ok], "result")

writexl::write_xlsx(result2, "Data/Proref_2022_version1.xlsx")


# result2 %>% filter(is.na(Stations)) %>% select(PARAM, Species)


```


```{r}

determ <- c("CD", "PB", "HG", "AS", "CR", "ZN", "NI", "CO", "CU", "AG")
plot_increase_mult(determ, species = "Gadus morhua", variable = "VALUE_WW", data = subset(data_all, YEAR %in% years_backgr), 
                   determinantgroup = "metals", plot = "window")
```

```{r}

X$median_per_station

```


### Plot first vs. second station 
```{r}
# debugonce(find_set_difference)
# diff <- find_set_difference(X, 1)
# diff <- find_set_difference(X, 2)

i <- 1:2
ggplot(X$data_medians_list[[diff$Station[i]]], aes(x = STATION_CODE, y = median)) + geom_point()

```

### Making a sorted station list
```{r}
############################################################################################
#
# Example of making a sorted station list (from least to most contaminanted) and make a "background station" plot 
# Note: slightly outdated, the procedure now is a bit different
#
############################################################################################

#
# Step 1: get data series (for several stations). Result: object with medians (per year) and medians (per station)
#
years_backgr <- 2002:2016
# debugonce(get_lower_medians)
X <- get_lower_medians("NI", sp = "Gadus morhua", ti = "Lever", variable = "VALUE_WW", data = subset(data_all, YEAR %in% years_backgr))
str(X, 1)
# $ data_medians_list :List of 11
# $ median_per_station: Named num [1:11] 0.05 0.11 0.045 0.045 0.1 0.07 0.046 0.059 0.0525 0.055 ...
#  ..- attr(*, "names")= chr [1:11] "10B" "13B" "15B" "23B" ...



#
# Step 2:Find difference  between (example): station 1-3 vs. station 4, when stations are ordered 
#   in increasing order by median
#
debugonce(find_set_difference)
find_set_difference(X, 4)

#
# Step 3: Find all differences 1 vs. 2, 1-2 vs. 3, 1-3 vs. 4, etc. (stations in increasing order)
#
find_set_differences(X)
# This does the same but returns NULL if there is no data 
differences_increasing_conc("NI", sp = "Gadus morhua", ti = "Lever", variable = "VALUE_WW", data = subset(data_all, YEAR %in% years_backgr))

#
# Step 4: Make plot of differences among stations in increasing order for one compound, species and tissue
#
plot_increase_determ("NI", species = "Gadus morhua", variable = "VALUE_WW", data = subset(data_all, YEAR %in% years_backgr))

#
# Step 5: Make all plots for a group of chemicals; don't have to specify tissue; plot to file by default
#
determ <- c("CD", "PB", "HG", "AS", "CR", "ZN", "NI", "CO", "CU", "AG")
plot_increase_mult(determ, species = "Gadus morhua", variable = "VALUE_WW", data = subset(data_all, YEAR %in% years_backgr), 
                   determinantgroup = "metals", plot = "window")


```

